pipeline {
    agent any
    
    tools{
        maven 'maven3'
        jdk 'jdk17'
    }
    
    environment{
        SCANNER_HOME = tool 'sonar-scanner'
    }
    
    options {
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }
    

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/kavindusamaranayake/Ekart.git'
            }
        }
        stage('Compile') {
            steps {
                sh 'mvn clean compile -DskipTests'
            }
        }
        stage('Unit Test') {
            steps {
                sh 'mvn test -DskipTests=true'
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=Shopping-Cart -Dsonar.projectName=Shopping-Cart \
                    -Dsonar.java.binaries=. '''
                }
            }
        }
        stage('OWASP Dependency Check') {
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DC'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage('Build') {
            steps {
                sh 'mvn package -DskipTests=true'
            }
        }
        stage('Deploy to Nexus') {
            steps {
                withMaven(globalMavenSettingsConfig: 'global-maven', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
                    sh "mvn deploy -DskipTests"
                }
            }
        }
        stage('Build & Tag Docker Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker build -t kavindusamaranayake/shopping-cart:latest -f docker/Dockerfile .'
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                sh 'trivy image kavindusamaranayake/shopping-cart:latest > trivy-report.txt'
            }
        }
        stage('Push Docker Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh 'docker push kavindusamaranayake/shopping-cart:latest '
                    }
                }
            }
        }
        stage('Kubernates Deploy') {
            steps {
                sh 'kubectl apply -f deploymentservice.yml'
            }
        }
        
    }
}
